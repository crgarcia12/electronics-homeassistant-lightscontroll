esphome:
  name: hamodule
  platform: ESP32
  board: esp32dev

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "e54f26a88ddf4d58e9870a14a34bfbfa"

wifi:
  ssid: "LeaCarlos21Internal_2"
  password: "LeaCarlos21I"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Hamodule Fallback Hotspot"
    password: "bvFRy5WVZ131"

captive_portal:

###################################
#          Chanel 1
###################################

# This sensor checks if the light is really on or off by checking the voltage
binary_sensor:
  - platform: gpio
    name: sensor_1
    pin:
      number: GPIO33
      mode: INPUT_PULLUP
      inverted: True
    id: sensor_1
  - platform: gpio
    name: sensor_2
    pin:
      number: GPIO32
      mode: INPUT_PULLUP
      inverted: True
    id: sensor_2
  - platform: gpio
    name: sensor_3
    pin:
      number: GPIO35
      mode: INPUT_PULLUP
      inverted: True
    id: sensor_3
  - platform: gpio
    name: sensor_4
    pin:
      number: GPIO34
      mode: INPUT_PULLUP
      inverted: True
    id: sensor_4    
switch:
  # This switch is a template (virtual). 
  # It allows HA to send turn_on_action and turn_off_action, but the state is
  # read directly from the binary_sensor
  - platform: template
    # https://esphome.io/components/switch/template.html
    name: light_1
    id: light_1
    icon: mdi:ceiling-light
    lambda: |-
      if (id(sensor_1).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            binary_sensor.is_off: sensor_1
          then:
            - logger.log: "template.turn_on.sensor==off"
            - switch.turn_on: relay_1
          else:
            - logger.log: "template.turn_on.sensor==on"
    turn_off_action:
      - if:
          condition:
            binary_sensor.is_on: sensor_1
          then:
            - logger.log: "template.turn_off.sensor==on"
            - switch.turn_on: relay_1
          else:
            - logger.log: "template.turn_off.sensor==off"
  - platform: template
    # https://esphome.io/components/switch/template.html
    name: light_2
    id: light_2
    icon: mdi:ceiling-light
    lambda: |-
      if (id(sensor_2).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            binary_sensor.is_off: sensor_2
          then:
            - logger.log: "template.turn_on.sensor==off"
            - switch.turn_on: relay_2
          else:
            - logger.log: "template.turn_on.sensor==on"
    turn_off_action:
      - if:
          condition:
            binary_sensor.is_on: sensor_2
          then:
            - logger.log: "template.turn_off.sensor==on"
            - switch.turn_on: relay_2
          else:
            - logger.log: "template.turn_off.sensor==off"
  - platform: template
    # https://esphome.io/components/switch/template.html
    name: light_3
    id: light_3
    icon: mdi:ceiling-light
    lambda: |-
      if (id(sensor_3).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            binary_sensor.is_off: sensor_3
          then:
            - logger.log: "template.turn_on.sensor==off"
            - switch.turn_on: relay_3
          else:
            - logger.log: "template.turn_on.sensor==on"
    turn_off_action:
      - if:
          condition:
            binary_sensor.is_on: sensor_3
          then:
            - logger.log: "template.turn_off.sensor==on"
            - switch.turn_on: relay_3
          else:
            - logger.log: "template.turn_off.sensor==off"
  - platform: template
    # https://esphome.io/components/switch/template.html
    name: light_4
    id: light_4
    icon: mdi:ceiling-light
    lambda: |-
      if (id(sensor_4).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            binary_sensor.is_off: sensor_4
          then:
            - logger.log: "template.turn_on.sensor==off"
            - switch.turn_on: relay_4
          else:
            - logger.log: "template.turn_on.sensor==on"
    turn_off_action:
      - if:
          condition:
            binary_sensor.is_on: sensor_4
          then:
            - logger.log: "template.turn_off.sensor==on"
            - switch.turn_on: relay_4
          else:
            - logger.log: "template.turn_off.sensor==off"

  # This controls the relay. It turns it on for 2 seconds and then it turns it back off
  - platform: gpio
    id: relay_1
    name: relay_1
    pin: GPIO12
    on_turn_on:
      - delay: 500ms
      - switch.turn_off: relay_1
  - platform: gpio
    id: relay_2  
    name: relay_2
    pin: GPIO27
    on_turn_on:
      - delay: 500ms
      - switch.turn_off: relay_2
  - platform: gpio
    id: relay_3
    name: relay_3
    pin: GPIO26
    on_turn_on:
      - delay: 500ms
      - switch.turn_off: relay_3
  - platform: gpio
    id: relay_4
    name: relay_4
    pin: GPIO25
    on_turn_on:
      - delay: 500ms
      - switch.turn_off: relay_4      