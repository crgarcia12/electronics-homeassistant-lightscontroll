# ####################################################################
# Latching relay Light Switch with manual push buttons
# ####################################################################
#  
# The circuit has a manual part, that combines multiple 
# toggle switches (_-_) with a latching relay.
# ESPHome acts as another toggle switch using a standard relay. 
# It also sense the output of the latching relay to notify HA if the
# light is on or off, since it could have been changed manually
#
#  Diagram:
#
#         _________ _-_ ________
#         |________ _-_ ________|
#         |________ _-_ ________|
# [AC] ___|                     |__[Latching Relay]___[Light]
#         |______ [Relay] ______|                   |
#                   |                               |
#                   |        _______________________|
#             ______|________|______
#             |   GPIO22    GPIO23  |
#             |                     |
#             |       [ESP32]       |
#             |_____________________|
#
# ####################################################################
# To make this work, ESPHome uses a Template Switch, that can receive 
# commands and respond with a calculated state:
#
#              [BinarySensor] (GPIO23)
#               |
#               | (Read state)
#               |
# [HA] <-----> [Template Switch]
#               |
#               | (Issue actions)
#               |
#              [Switch] (GPIO22)
#
# ####################################################################

esphome:
  name: demo-light
  platform: ESP32
  board: esp32dev

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "8a99a5ece8395aa1dc3fd9bcfd835013"

wifi:
  ssid: "LeaCarlos21Internal_2"
  password: "LeaCarlos21I"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Demo-Light Hotspot LeaCarlos21I"
    password: "LeaCarlos21I"

captive_portal:

# This sensor checks if the light is really on or off by checking the voltage
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO23
      mode: INPUT_PULLUP
      inverted: True
    name: demo_led_light_2_sensor_name
    id: demo_led_light_2_sensor_id

switch:
  # This switch is a template (virtual). 
  # It allows HA to send turn_on_action and turn_off_action, but the state is
  # read directly from the binary_sensor
  - platform: template
    # https://esphome.io/components/switch/template.html
    name: demo_led_light_2_template_name
    id: demo_led_light_2_template_id
    icon: mdi:ceiling-light
    lambda: |-
      if (id(demo_led_light_2_sensor_id).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            binary_sensor.is_off: demo_led_light_2_sensor_id
          then:
            - logger.log: "template.turn_on.sensor==off"
            - switch.turn_on: demo_led_light_2_relay_id
          else:
            - logger.log: "template.turn_on.sensor==on"
    turn_off_action:
      - if:
          condition:
            binary_sensor.is_on: demo_led_light_2_sensor_id
          then:
            - logger.log: "template.turn_off.sensor==on"
            - switch.turn_on: demo_led_light_2_relay_id
          else:
            - logger.log: "template.turn_off.sensor==off"

  # This controls the relay. It turns it on for 2 seconds and then it turns it back off
  - platform: gpio
    id: demo_led_light_2_relay_id  
    name: demo_led_light_2_relay_name
    pin: GPIO22
    on_turn_on:
      - delay: 2000ms
      - switch.turn_off: demo_led_light_2_relay_id